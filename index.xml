<?xml version="1.0" encoding="UTF-8" ?>	

  <Module>	

    <ModulePrefs title="Hangout to ROS Demo">	
      <Require feature="rpc"/>	
      <Require feature="views"/>	
    </ModulePrefs>	
    <Content type="html">	
      <![CDATA[	
      	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet"/>
		<link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,400,300,600,700' rel='stylesheet' type='text/css'/>
        <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.3/angular.min.js" type="application/javascript"></script>
		<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
        <script type="text/javascript" src="https://rawgit.com/asyncly/EventEmitter2/master/lib/eventemitter2.js"></script>
		<script type="text/javascript" src="https://rawgit.com/RobotWebTools/roslibjs/develop/build/roslib.min.js"></script>	
		<script type="text/javascript" src="https://rawgit.com/tesYolan/rostogapi_final/angular_ui/scripts/ros.js"></script>
	    
		<style type="text/css">
body
{
	font-family: 'Open Sans', Arial, sans-serif;
	font-weight: 300;
	font-size: 14px;
}

#browser-window{
	background: url("https://raw.githubusercontent.com/tesYolan/rostogapi_final/master/gfx/background.png") ;
	height: 538px;
	width: 335px;
	padding: 49px 25px 10px 25px;
	margin: auto;
	position:relative;
}

#viewport{
	overflow:hidden;
	height: 420px;
}

#viewport-content{
	position: relative;
	bottom: -500px;
}

.row-chat{
	position:absolute;
	bottom: 20px;
	margin: 0;
	width: 286px;
}

.bubble-container{
	display:block;
	clear: both;
	position:relative;
	margin-bottom:10px;
	min-height: 53px;
}

.avatar{
	border: 2px solid #ffffff;
	box-sizing: initial;
	box-shadow: 0 1px 3px rgba(0,0,0,0.15);
}

.avatar,.avatar img{
	width: 50px;
	height: 50px;
	-webkit-border-radius: 30px; /* Saf3+, Chrome */
	border-radius: 30px; /* Opera 10.5, IE 9 */
}


.bubble{
	padding: 13px;
	-webkit-border-radius: 3px;
	-moz-border-radius: 3px;
	border-radius: 3px;
	background: rgba(255, 255, 255, 0.9);
	color: #575858;
	box-shadow: 0 1px 3px rgba(0,0,0,0.15);
}

.avatar-left:before {
	content: '';
	position: absolute;
	border-style: solid;
	border-width: 10px 14px 10px 0;
	border-color: transparent #ffffff;
	display: block;
	width: 0;
	z-index: 1;
	left: 61px;
	top: 13px;
}

.avatar-right:before 
{
	content: '';
	position: absolute;
	border-style: solid;
	border-width: 10px 0 10px 14px;
	border-color: transparent #ffffff;
	display: block;
	width: 0;
	z-index: 1;
	right: 61px;
	top: 13px;
}

/* Positionning of the avatar and the bubble */
.avatar-left{
	float: left;
	width: 50px;
}

.bubble-left{
	overflow: hidden;
	margin-left: 75px;
}

.avatar-right{
	float: right;
	width: 50px;
}

.bubble-right{
	overflow: hidden;
	margin-right: 75px;
}
		</style>
		
		<script>
		function NgChatCtrl($scope) {
            // Our server to connect to
  		
            //var listenMessage = new ROSLIB.Message({
            //response : ''
            //}); 

			//chatResponse.subscribe(function(message) {
			//listenMessage.response = message.data; 

			//console.log(message.data); 
			//}); 
			
			
			var side = 'left';

            // Messages, client info & sending
            $scope.messages = [];
            $scope.sendMessage = function () {
                //server.sendNgChatMessage($scope.messageText);
                message.utterance  = $scope.messageText; 
                chatTopic.publish(message); 
                console.log(message.utterance); 
                chatPublish(message.utterance); 
                
                $scope.messageText = "";
            };
            // Occurs when we receive chat messages
            //server.on('ngChatMessagesInform', function (p) {
			chatResponse.subscribe(function(p) {
				console.log(p.data); 
				chatPublish(p.data); 
              
            });
            function chatPublish(p) {
				
			$scope.messages.push({
                    //avatar: "data:image/png;base64," + p.avatar.toBase64(),
                    
                    text: p,
                    side: side
				}); 
            		

                // Animate
                $("#viewport-content").animate({
                    bottom: $("#viewport-content").height() - $("#viewport").height()
                }, 250);

                // flip the side
                side = side == 'left' ? 'right' : 'left';
			}
			
			//Now here we take out pulisher to handle when the user passes data to ROS and when the User pulishes the message. 
            // Once connected, we need to join the chat

        }
		
		
		</script>
		<div id="browser-window" ng-controller="NgChatCtrl">
        <div id="viewport">
            <div id="viewport-content">
                <div class="bubble-container" ng-repeat="m in messages">
                  <!--  <div class="avatar avatar-{{m.side}}"> <img src="{{m.avatar}}" /></div> -->
                    <div class="bubble bubble-{{m.side}}">{{m.text}}</div>
                </div>
            </div>
        </div>

        <form class="row row-chat" ng-submit="sendMessage()">
            <div class="input-group">
                <input type="text" class="form-control" ng-model="messageText" placeholder="Type your message" />

                <span class="input-group-btn">
                    <button type="submit" class="btn btn-primary">Send</button>
                </span>
            </div>

        </form>
    </div>

      ]]>	
    </Content>	
  </Module>
